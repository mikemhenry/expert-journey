# Label pull-requests.
# This workflow uses two separate actions to label pull requests.
# The first action (labeler) allows for labeling based on complex filepath matching,
# while the second action (release-drafter) enables matching PR titles and branch names.


name: "PR Labeler"
run-name: "Label PR at ${{github.ref}}"

on:
  pull_request_target:
    types:
      - opened
      - reopened
      - synchronize

jobs:

#  labeler:
#    name: 'Labeler'
#    permissions:
#      contents: read
#      pull-requests: write
#    runs-on: ubuntu-latest
#    steps:
#
#      - name: 'labeler'
#        # https://github.com/actions/labeler
#        uses: actions/labeler@v4.1.0
#        with:
#          # Path to the configuration file defining match cases.
#          configuration-path: .github/config/github_labeler.yaml
#          # Remove labels if matched files are reverted.
#          sync-labels: true
#          # include dotfiles, e.g. '.github/'.
#          dot: true
#
#
#  autolabeler:
#    name: 'Autolabeler'
#    permissions:
#      contents: read
#      pull-requests: write
#    runs-on: ubuntu-latest
#    steps:
#
#      - name: 'Label pull request'
#        # https://github.com/release-drafter/release-drafter#autolabeler
#        uses: release-drafter/release-drafter@v5.24.0
#        with:
#          disable-releaser: true
#          config-name: config/autolabeler.yaml
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  multi-labeler:
    name: 'Add labels'
    runs-on: ubuntu-latest
    permissions: write-all
#      contents: read
#      pull-requests: write
#      statuses: write
#      checks: write
    steps:
      - name: 'multi-labeler'
        # https://github.com/fuxingloh/multi-labeler
        uses: fuxingloh/multi-labeler@v2
        with:
          config-path: .github/labels_pr.yaml
#
#
#  metadata:
#    name: 'Load repository metadata'
#    if: github.event.action == 'opened'
#    uses: ./.github/workflows/repo_meta.yaml
#    with:
#      branch: ${{ github.base_ref }}
#
#  docs-preview:
#    # Build the ReadTheDocs website for pull-requests and add a link to the pull request's description.
#    # Note: Enable "Preview Documentation from Pull Requests" in ReadtheDocs project at https://docs.readthedocs.io/en/latest/pull-requests.html
#
#    name: 'Generate ReadTheDocs preview'
#    needs: metadata
#    runs-on: ubuntu-latest
#    permissions:
#      pull-requests: write
#
#    steps:
#      - run: echo "${{ github.event }}"
#
#      - name: 'Build docs'
#        # https://github.com/readthedocs/actions/tree/v1/preview
#        uses: readthedocs/actions/preview@v1
#        with:
#          project-slug: ${{ fromJSON(needs.metadata.outputs.json).website.rtd_name }}
