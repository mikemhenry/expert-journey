
name: "CT"

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Every day at midnight UTC.
    - cron: '0 0 * * 1'  # Every Monday at midnight UTC.


jobs:

  init:
    name: 'Maintenance'
    if: github.event_name == 'workflow_dispatch' || github.event.schedule == '0 0 * * *'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: repodynamics/init@main


  announcement-check:
    name: "Announcement Expiry Check"
    if: github.event_name == 'workflow_dispatch' || github.event.schedule == '0 0 * * *'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: 'Checkout main branch'
        uses: actions/checkout@v3
        with:
          sparse-checkout: meta/.out/metadata.json
          sparse-checkout-cone-mode: false
      - name: 'Read repository metadata'
        id: meta
        run: echo "meta=$(cat meta/.out/metadata.json)" >> $GITHUB_OUTPUT
      - name: "Run Repodynamics Announce"
        uses: repodynamics/announce@main
        with:
          retention-days: ${{ fromJSON(steps.meta.outputs.meta).website.announcement_retention_days }}

  package-test-local:
    name: 'Test Package'
    if: github.event_name == 'workflow_dispatch' || github.event.schedule == '0 0 * * 1'
    uses: ./.github/workflows/package_test.yaml
    with:
      package-source: GitHub

  package-test-pypi:
    name: 'Test Package'
    if: github.event_name == 'workflow_dispatch' || github.event.schedule == '0 0 * * 1'
    uses: ./.github/workflows/package_test.yaml
    with:
      package-source: PyPI

  docs:
    name: 'Test Website'
    if: github.event_name == 'workflow_dispatch' || github.event.schedule == '0 0 * * 1'
    runs-on: ubuntu-latest
    steps:
      - uses: repodynamics/sphinxdocs@main
